<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>modulo operator on if1live space</title><link>https://if1live.github.io/tags/modulo-operator/</link><description>Recent content in modulo operator on if1live space</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 20 Aug 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/modulo-operator/index.xml" rel="self" type="application/rss+xml"/><item><title>나머지 연산자 없이 x % (2의 거듭제곱) 계산하기</title><link>https://if1live.github.io/posts/use-bit-op-as-mod-operator/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/use-bit-op-as-mod-operator/</guid><description>이전에 나머지 연산자 없이 x % 256 계산하기라는 글을 썻다. % 256만 계산할 수 있으면 재미없으니까 더 확장해보자. % 256을 구하기 위해서 캐스팅을 이용했다.</description></item><item><title>나머지 연산자 없이 x % 256 계산하기</title><link>https://if1live.github.io/posts/use-casting-as-mod-operator/</link><pubDate>Sat, 18 Aug 2018 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/use-casting-as-mod-operator/</guid><description>1년전, 2017년 8월 16일에 재밌는 생각이 나서 트윗을 쓴게 있다. a%256 최적화 하기 : (int)(unsigned char)a clang 기준 -O3 옵션 주면 어셈 한줄 https://twitter.com/if1live/status/897752172040929280 C에서 타입 캐스팅을 캐스팅 연산자라고</description></item></channel></rss>