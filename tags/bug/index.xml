<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bug on if1live space</title><link>https://if1live.github.io/tags/bug/</link><description>Recent content in bug on if1live space</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sat, 29 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/bug/index.xml" rel="self" type="application/rss+xml"/><item><title>월요일의 버그 - webpack-cli</title><link>https://if1live.github.io/posts/bug-of-monday-webpack-cli/</link><pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/bug-of-monday-webpack-cli/</guid><description>문제!!! 이번주 월요일(2019/06/24)에 webpack 빌드를 돌렸는데 webpack-cli 안에서 터졌다. if (!e &amp;amp;&amp;amp; fileOwnerId === process.getuid()) utimesSync(openCollectivePath, now, now); TypeError: process.getuid is not a function at e (&amp;lt;hidden&amp;gt;\node_modules\webpack-cli\bin\cli.js:356:43) at FSReqWrap.oncomplete (fs.js:141:20) 금요일(2019/</description></item><item><title>버그 삽질기 - 파이썬으로 구현한 API 서버 루비로 포팅하기</title><link>https://if1live.github.io/posts/http-request-params-trap-python-and-ruby/</link><pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/http-request-params-trap-python-and-ruby/</guid><description>간단한 명언 API 서버를 만들보자. 필요한 기능은 다음과 같다. 명언 목록을 데이터로 분리한다. 나중에 목록을 쉽게 갱신할수 있어야한다. 서버에 접속하면 명언중 하나</description></item><item><title>HTML textarea의 개행문자는 무엇일까?</title><link>https://if1live.github.io/posts/what-is-textarea-newline/</link><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/what-is-textarea-newline/</guid><description>개요 내가 요즘에 만드는 것은 HTTP기반의 모바일 게임이다. 서버와 클라는 HTTP로 통신을 하고 클라는 서버의 요청을 예쁘게 그려주는 역할을 수행한다. 간단히</description></item><item><title>스택 지역 변수의 주소값을 이용한 버그</title><link>https://if1live.github.io/posts/stack-allocation-voodoo-magic/</link><pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/stack-allocation-voodoo-magic/</guid><description>얼마전에 gcc와 clang이 정렬되지 않은 구조체(예를 들어 구조체의 크기가 7바이트) 를 어떤식으로 메모리에 배치하는지 테스트하다가 재밌는 현상을 발견해</description></item></channel></rss>