<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>schdeuling on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/schdeuling/</link><description>Recent content in schdeuling on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Fri, 17 Oct 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/schdeuling/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux Process Scheduling</title><link>https://if1live.github.io/posts/system-prog-linux-process-schduling/</link><pubDate>Fri, 17 Oct 2014 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/system-prog-linux-process-schduling/</guid><description>시스템 프로그래밍 시험 공부하면서 정리한 내용이다. 내용 갱신은 없을 예정이다.
Linux Process Scheduling Process Schdeuling 언제 switch 할 것인가 + 무엇을 switch 할 것인가? 목표 빠른 프로세스 반응 시간 백그라운드 작업의 좋은 처리량(throughput) 프로세스 기아 방지 high/low-우선순위 프로세스 중재 프로세스 분류 전통적인 분류 방법 I/O-bound vs CPU-bound 다른 분류 방법 인터렉티브 프로세스 유저가 입력할때 반응해야됨 -&amp;gt; 빠른 반응성 중요 배치 프로세스 높은 처리량 실시간 프로세스 high/low-우선순위 지기키 데드라인은 무조건 지키기 Linux Scheduling 기본 원리 스케줄링 정책 : 언제, 어떻게 프로세스를 선택하는 규칙 Time Sharing time quantum 만큼 실행.</description></item></channel></rss>