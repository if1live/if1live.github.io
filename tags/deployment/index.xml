<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>deployment on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/deployment/</link><description>Recent content in deployment on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Thu, 02 Jan 2020 00:00:00 +0900</lastBuildDate><atom:link href="https://if1live.github.io/tags/deployment/index.xml" rel="self" type="application/rss+xml"/><item><title>나의 백엔드 배포 환경 정책</title><link>https://if1live.github.io/posts/my-backend-deployment-environment-policy/</link><pubDate>Thu, 02 Jan 2020 00:00:00 +0900</pubDate><guid>https://if1live.github.io/posts/my-backend-deployment-environment-policy/</guid><description>배포 환경(Development environment)은 목적에 따라서 각각 다른 스테이지로 소프트웨어 배포하는걸 말한다. 예시로 설명하면 쉬운데 말로 쓰니까 어렵다. 개발 서버와 프로덕션 서버를 분리해서 실수로 개발 서버 말아먹어도 서비스에는 영향이 가지 않도록 만드는 것을 뜻한다.
wikipedia 문서를 참조하면 남들은 아래와 같이 환경으로 나눈다고 카더라.
local development integration testing staging production 내 경우는 아래와 같이 환경을 나눴다
stage dotenv (local) development dev unstable nightly nightly devqa devqa staging-1 staging-1 staging-2 staging-2 왜 이 꼴이 되었는지 자기합리화하는 글을 써보았다.</description></item></channel></rss>