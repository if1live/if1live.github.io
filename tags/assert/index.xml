<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>assert on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/assert/</link><description>Recent content in assert on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 14 Oct 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/assert/index.xml" rel="self" type="application/rss+xml"/><item><title>LibOVR에서 찾은 적절한 assert macro</title><link>https://if1live.github.io/posts/libovr-assert-macro/</link><pubDate>Mon, 14 Oct 2013 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/libovr-assert-macro/</guid><description>개발하려면 어쨋든 assert가 있긴 해야겠더라. 근데 기본 assert를 쓰면 callstack 추적하기가 귀찮더라. 그래서 맨날 간단한 매크로(int 3) 만들어서 사용했었는데 나중에 알고보니까 해당 매크로는 64비트 환경에서 작동하지 않는다. 남들은 어떻게 하나 찾아보다가 때마침 Oculus SDK를 보게 되었는데 매우 적절하게 있어서 그냥 갖다쓴다. 원본 소스는 OVR_Types.h 이다.
// Microsoft Win32 specific debugging support #if defined(OVR_OS_WIN32) # ifdef OVR_CPU_X86 # if defined(__cplusplus_cli) # define OVR_DEBUG_BREAK do { __debugbreak(); } while(0) # elif defined(OVR_CC_GNU) # define OVR_DEBUG_BREAK do { OVR_ASM(&amp;quot;int $3\n\t&amp;quot;); } while(0) # else # define OVR_DEBUG_BREAK do { OVR_ASM int 3 } while (0) # endif # else # define OVR_DEBUG_BREAK do { __debugbreak(); } while(0) # endif // Unix specific debugging support #elif defined(OVR_CPU_X86) || defined(OVR_CPU_X86_64) # define OVR_DEBUG_BREAK do { OVR_ASM(&amp;quot;int $3\n\t&amp;quot;); } while(0) #else # define OVR_DEBUG_BREAK do { *((int *) 0) = 1; } while(0) #endif // This will cause compiler breakpoint #define OVR_ASSERT(p) do { if (!</description></item></channel></rss>