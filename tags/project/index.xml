<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>project on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/project/</link><description>Recent content in project on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Thu, 31 Jan 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/project/index.xml" rel="self" type="application/rss+xml"/><item><title>Flask Project 구조 예제</title><link>https://if1live.github.io/posts/flask-project-structure/</link><pubDate>Thu, 31 Jan 2013 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/flask-project-structure/</guid><description>요즘에는 Flask를 주력으로 사용하고 있다. Flask는 가볍게 쓰는것을 목표로 설계된 라이브러리다 보니까 프로젝트 구조를 어떻게 잡을지에 대한 가이드라인조차 딱히 제시하지 않는다.(django에서는 프로젝트 트리를 미리 제시하기 떄문에 이런 고민을 굳이 깊게할 필요가 없다) 그래서 내가 요즘 사용하는 구조를 정리해봤다
Flask Project Structure ROOT ├── common │ ├── __init__.py │ ├── http.py │ ├── mobile.py │ ├── db.py │ ├── testlibs.py │ └── ... ├── like │ ├── __init__.py │ ├── controllers.py │ ├── models.</description></item><item><title>Django Project 구조 예제</title><link>https://if1live.github.io/posts/django-project-structure/</link><pubDate>Wed, 30 Jan 2013 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/django-project-structure/</guid><description>최근에 Django로 코딩한적이 있다. django는 기본적으로 프로젝트 트리에 적절한 제약이 걸려있기 떄문에 굳이 신경안쓰고 django 가이드라인에서 제공하는대로 짜도 별 문제는 없을것이다. django 에서 제시하는 가이드라인에 일부 참고자료를 덧붙여서 내 나름대로 사용했던 프로젝트 구조를 정리해봤다. 일단 목표한 요구사항은 다음과 같다.
외부라이브러리를 막 집어넣어도 문제가 생기지 않을것 템플릿을 한곳에 모아서 관리하기. 템플릿 파일은 개발자가 아니라 디자이너가 편집하게 될 파일이니까 따로 모아놓는쪽이 관리하기 편할것이다. Django Project Structure ROOT ├── apps │ ├── __init__.py │ ├── common │ │ ├── __init__.</description></item></channel></rss>