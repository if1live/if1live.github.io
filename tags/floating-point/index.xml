<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>floating-point on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/floating-point/</link><description>Recent content in floating-point on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sun, 05 Aug 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/floating-point/index.xml" rel="self" type="application/rss+xml"/><item><title>나눗셈 연산을 곱셈으로 프로그래밍 할 수 있음?</title><link>https://if1live.github.io/posts/float-divide-without-divide/</link><pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/float-divide-without-divide/</guid><description>개요 몇달전에 SNS를 하다가 재밌는 글을 봤다.
나눗셈 연산을 곱셈으로 프로그래밍 할 수 있음?
나누기/ 연산자를 안쓰고
정수에 대해서는 어떻게 구현할지 잘 모르겠지만 부동소수에서 간단한 방법이 보이더라. Fast inverse square root를 쓰면 될거같다.
고속 역 제곱근은 $\frac{1}{\sqrt{x}}$를 구하는 함수이다. 이것을 제곱하면 $\frac{1}{x}$가 된다. /x나 *(1/x)나 똑같은거니까 문제는 다 푼것과 마찬가지다.
코드를 공유할때는 ideone같은게 편하더라. 그래서 코드를 넣고 돌렸다. 그리고 재밌는 결과가 나오기 시작하는데&amp;hellip;.
code #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;math.h&amp;gt; // https://en.wikipedia.org/wiki/Fast_inverse_square_root float Q_rsqrt( float number ) { long i; float x2, y; const float threehalfs = 1.</description></item><item><title>100 * 0.7 = ?</title><link>https://if1live.github.io/posts/amazing-floating-point-100x07/</link><pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/amazing-floating-point-100x07/</guid><description>100 * 0.7 = 69 Toy Clash는 10단계로 조절할 수 있는 막대 그래프를 이용해서 BGM 조절을 구현했다.
옵션을 저장하는 방식으로는 디버깅이 편한 XML을 사용했다.
&amp;lt;volume-bgm&amp;gt;70&amp;lt;/volume-bgm&amp;gt; 30%라는 값을 표현할때 &amp;lt;volume-bgm&amp;gt;0.30000000000000004&amp;lt;/volume-bgm&amp;gt;이라고 표현되는 것보다 &amp;lt;volume-bgm&amp;gt;30&amp;lt;/volume-bgm&amp;gt;이라고 표현되는게 깔끔하니 정수로 볼륨값을 표현했다. 볼륨의 최대값은 100으로 설정하고 기본값으로 70%로 설정했다. 설정파일에서는 볼륨이 70이라고 기록되고 옵션 메뉴에서는 막대가 7개면 올바르게 구현되었다고 말할수 있을것이다.
그런데 실제로 구현하고나니 BGM 볼륨 막대가 6개더라. 옵션 파일을 열어보니 볼륨값이 69로 기록되어 있엇다. 100 * 0.</description></item></channel></rss>