<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>macro on if1live space</title><link>https://if1live.github.io/tags/macro/</link><description>Recent content in macro on if1live space</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Fri, 27 Nov 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/macro/index.xml" rel="self" type="application/rss+xml"/><item><title>매크로 상수를 변경하기 쉽게 바꾸는 편법</title><link>https://if1live.github.io/posts/refactoring-c-macro-constant/</link><pubDate>Fri, 27 Nov 2015 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/refactoring-c-macro-constant/</guid><description>int main() { printf(&amp;quot;%d\n&amp;quot;, FOO + 123); 프로젝트를 진행하면 아무리 설계를 잘해도 여러 파일에서 사용되는 상수를 피할수 없다. 이때는 보통 공유하는 상수/함수 등을 모아서 별도의 헤더 파일</description></item><item><title>LibOVR에서 찾은 적절한 assert macro</title><link>https://if1live.github.io/posts/libovr-assert-macro/</link><pubDate>Mon, 14 Oct 2013 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/libovr-assert-macro/</guid><description>개발하려면 어쨋든 assert가 있긴 해야겠더라. 근데 기본 assert를 쓰면 callstack 추적하기가 귀찮더라. 그래서 맨날 간단한 매크로(int 3) 만들어서 사용했</description></item></channel></rss>