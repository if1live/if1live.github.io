<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lint on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/lint/</link><description>Recent content in lint on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sat, 13 Oct 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/lint/index.xml" rel="self" type="application/rss+xml"/><item><title>타입스크립트에서 if문 안에 promise가 들어가는 문제 피하기</title><link>https://if1live.github.io/posts/prevent-bug-by-if-statement-with-promise/</link><pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/prevent-bug-by-if-statement-with-promise/</guid><description>async function + if 옛날 옛적 미개한 자바스크립트에는 콜백뿐이었다. 나중에 promise가 추가되서 좋아졌다. 더 나중에 async/await가 추가되서 더 좋아졌다. async/await 좋다고 열심히 쓰다가 이번주에 아래와 같은 함정을 밟았다.
export const isReady = async () =&amp;gt; { const timeout = new Promise((resolve) =&amp;gt; { setTimeout(resolve, 100) }); await timeout; return false; }; common.ts에 있는 isReady()는 async 함수이다. 예제 코드니까 적당한 시간 뒤에 false를 반환하도록 구현했다.
import { isReady } from './common'; const main = async () =&amp;gt; { if (isReady()) { console.</description></item></channel></rss>