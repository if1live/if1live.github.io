<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mocha on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/mocha/</link><description>Recent content in mocha on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Wed, 03 Jul 2019 01:00:00 +0900</lastBuildDate><atom:link href="https://if1live.github.io/tags/mocha/index.xml" rel="self" type="application/rss+xml"/><item><title>Jest 탈출기 - 타입스크립트 + Mocha</title><link>https://if1live.github.io/posts/escape-from-jest-mocha-with-typescript/</link><pubDate>Wed, 03 Jul 2019 01:00:00 +0900</pubDate><guid>https://if1live.github.io/posts/escape-from-jest-mocha-with-typescript/</guid><description>개요 Jest 탈출기 - Jest는 느리다, Jest 탈출기 - Mocha를 쓰자에서는 자바스크립트 기준으로 예제를 작성했다. 하지만 실제로 내가 쓰는 언어는 타입스크립트이다.
이 글에서는 타입스크립트에서 mocha 굴리는 방법을 다룬다.
목표: 타입스크립트로 작성된 테스트 돌리기 아래의 테스트는 타입스크립트로 작성되었다. 이것을 mocha로 돌리는게 목표이다.
import { Sample } from '@src/sample'; test('ok', () =&amp;gt; { const x = new Sample(); expect(x.foo()).toBe(1); }); @src는 tsconfig.json에 설정한 paths이다. 타입스크립트에서 절대경로 쓰기에서 다뤘다. 여기에서는 다루지 않는다.
test()를 mocha에서도 쓸 수 있게 만드는 방법은 Jest 탈출기 - Mocha를 쓰자에서 다뤘다.</description></item><item><title>Jest 탈출기 - Jest는 느리다</title><link>https://if1live.github.io/posts/escape-from-jest-jest-is-slow/</link><pubDate>Mon, 01 Jul 2019 01:00:00 +0900</pubDate><guid>https://if1live.github.io/posts/escape-from-jest-jest-is-slow/</guid><description>개요 요새 작업하는 프로젝트에서 jest를 사용해서 유닛테스트를 돌린다. 프로젝트가 진행될수록 테스트가 점점 느려지더니 이제 유닛 테스트 한번 돌리는데 1분이 걸린다. 라이젠 붙은 좋은 컴퓨터에서 CI 돌리는데 여기에서도 30초나 걸린다.
근데 같은 테스트 코드를 mocha로 돌리면 몇초 안걸리더라? jest는 mocha와 달리 병렬적으로 테스트가 돌아가니 훨씬 빨라야 하지 않나? 근데 몇배가 느리다고?
왜 jest가 mocha보다 느리게 테스트가 굴러가는지 뜯어봤다.
속도 비교 const a1 = Date.now(); var express = require('express'); const a2 = Date.</description></item></channel></rss>