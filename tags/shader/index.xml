<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>shader on if1live space</title><link>https://if1live.github.io/tags/shader/</link><description>Recent content in shader on if1live space</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sat, 27 Apr 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/shader/index.xml" rel="self" type="application/rss+xml"/><item><title>셰이더 프로그래밍 입문 for GLSL</title><link>https://if1live.github.io/posts/glsl-example/</link><pubDate>Sat, 27 Apr 2013 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/glsl-example/</guid><description>포프님의 **셰이더 프로그래밍 입문**을 읽으면서 이거 GLSL로 구현하면서 공부해보자 하면서 만든게 있는데 귀찮아서 방치해놧다가 지금서야 정리했다. 책은</description></item><item><title>Uber Shader</title><link>https://if1live.github.io/posts/uber-shader/</link><pubDate>Sun, 27 Jan 2013 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/uber-shader/</guid><description>기본 개념은 한 개의 쉐이더 소스를 짜고 ifdef/ifndef 질을 해서 쉐이더 코드를 여러 형태로 변화시키는 것이다. 이것이 의미가 있는 이유는 여러 종류의 광원모델을 기반으로 쉐이더를</description></item></channel></rss>