<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pinvoke on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/pinvoke/</link><description>Recent content in pinvoke on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 12 Feb 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/pinvoke/index.xml" rel="self" type="application/rss+xml"/><item><title>C#에서 C++ DLL 사용하기</title><link>https://if1live.github.io/posts/csharp-cpp-dll/</link><pubDate>Tue, 12 Feb 2013 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/csharp-cpp-dll/</guid><description>개요 C#에서 C++ dll을 사용하기 위해서는 pinvoke(platform invoke)를 사용하면 된다. 아래의 내용은 사용법에 대한 간단한 정리이다. 내용 생략하고 Sample 를 받아도 된다.
C++ h // Ŭnicode please #pragma once #include &amp;lt;cstdio&amp;gt; namespace ns {; typedef struct tTest { char strTest[128]; //문자열 128 int intTest; //숫자형 char byteTest[64]; //바이트형 배열 unsigned int uintTest[4]; //유니트형 배열 } typeTest; } extern &amp;quot;C&amp;quot; __declspec(dllexport) void OnTest1(void); //기본형 extern &amp;quot;C&amp;quot; __declspec(dllexport) int intOnTest2(int intTemp); //입출력 숫자형 extern &amp;quot;C&amp;quot; __declspec(dllexport) int* strOnTest3(); //입출력 문자열형 extern &amp;quot;C&amp;quot; __declspec(dllexport) void OnTest4(ns::typeTest *testTemp); //입력 구조체(포인터 출력가능) extern &amp;quot;C&amp;quot; __declspec(dllexport) void OnTest5(int *intTemp); //입출력 배열(포인터 출력가능) 문자열을 반환하는 경우 char포인터를 리턴하는 대신 int*를 리턴하고 C#쪽에서 적절히 캐스팅해서 받아야한다 C#쪽에서 구조체를 구성하는것은 메모리 구조만 맞추면 되니까 네임스페이스건 뭐건 잇건 없건 큰 문제가 없다 dll 인터페이스로 만들기 위해서 extern &amp;quot;C&amp;quot; __declspec(dllexport)를 함수에 넣어준다 cpp // Ŭnicode please #include &amp;quot;sample.</description></item></channel></rss>