<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>define on if1live space</title><link>https://if1live.github.io/tags/define/</link><description>Recent content in define on if1live space</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 30 Jan 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/define/index.xml" rel="self" type="application/rss+xml"/><item><title>int main() { #include "data.txt" return 0; }</title><link>https://if1live.github.io/posts/x-macro-is-useful/</link><pubDate>Mon, 30 Jan 2017 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/x-macro-is-useful/</guid><description>흑마법은 많이 짜봤지만 int foo() { #include &amp;ldquo;data.txt&amp;rdquo; } 를 이길 물건은 아직 짜지 못했다. 내 명작 흑마법이었는데 리펙토링 하려다 c++ 접어서 방치 트위터에서 남들의 흑마법 코드를 보다가</description></item><item><title>매크로 상수를 변경하기 쉽게 바꾸는 편법</title><link>https://if1live.github.io/posts/refactoring-c-macro-constant/</link><pubDate>Fri, 27 Nov 2015 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/refactoring-c-macro-constant/</guid><description>int main() { printf(&amp;#34;%d\n&amp;#34;, FOO &amp;#43; 123); 프로젝트를 진행하면 아무리 설계를 잘해도 여러 파일에서 사용되는 상수를 피할수 없다. 이때는 보통 공유하는 상수/함수 등을 모아서 별도의 헤더 파일</description></item></channel></rss>