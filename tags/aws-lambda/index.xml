<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aws lambda on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/aws-lambda/</link><description>Recent content in aws lambda on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Fri, 30 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/aws-lambda/index.xml" rel="self" type="application/rss+xml"/><item><title>callbackWaitsForEmptyEventLoop와 AWS Lambda의 함정</title><link>https://if1live.github.io/posts/trap-callback-waits-for-empty-event-loop/</link><pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/trap-callback-waits-for-empty-event-loop/</guid><description>개요 요새 typescript + express 백엔드를 짠다. 운영에 대해서는 조금도 생각하기 싫어서 AWS Lambda로 배포한다. serverless-http라는 좋은 물건을 쓰면 express를 AWS Lambda에서 돌릴 수 있다. express의 생산성을 유지하면서 AWS Lambda의 안정적인 운영을 챙길 수 있으니 좋은 구성이다. 하지만 개발 환경과 배포 환경이 근본적으로 달라서 여러가지 함정을 밟고 있다. 인상적이었던 함정 하나를 정리했다.
sentry 전송 실패 그냥 express를 사용하는 경우 sentry 에러 전송은 생각할 필요없다. 서버가 데몬처럼 돌아가니까 에러 리포트가 잘 보내진다.</description></item></channel></rss>