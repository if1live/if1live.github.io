<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>delete on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/delete/</link><description>Recent content in delete on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sat, 19 Mar 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/delete/index.xml" rel="self" type="application/rss+xml"/><item><title>delete this 이용해서 터미널에 삼각형 그리기</title><link>https://if1live.github.io/posts/recursion-with-destructor/</link><pubDate>Sat, 19 Mar 2016 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/recursion-with-destructor/</guid><description>어제 회사에서 delete this 에 대해 이것저것 이야기를 했었다. 그리고 꿈에서 delete this 로 재귀를 구현하는 흑마법이 생각나서 짜봤다.
목표 : delete this를 이용해서 다음과 같은 삼각형을 출력해야한다. for, while 같은 키워드 사용 금지 명시적인 재귀호출 없음, 단 delete this는 허용 * ** *** 기본 구현 delete를 쓰면 메모리를 해제하고 소멸자를 호출한다. 그렇다면 소멸자 안에서 delete this를 사용하면 자기 자신의 소멸자를 다시 호출할테니 재귀호출이 되는거 아니냐?
#include &amp;lt;cstdio&amp;gt; #include &amp;lt;string&amp;gt; int from = 0; int to = 3; int counter = from; class DtorRecursion { public: ~DtorRecursion() { if(counter &amp;lt; to) { line += &amp;quot;*&amp;quot;; printf(&amp;quot;%s\n&amp;quot;, line.</description></item></channel></rss>