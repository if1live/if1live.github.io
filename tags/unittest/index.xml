<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>unittest on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/unittest/</link><description>Recent content in unittest on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 18 Jun 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://if1live.github.io/tags/unittest/index.xml" rel="self" type="application/rss+xml"/><item><title>완벽한 싱글턴을 찾아서 - 테스트</title><link>https://if1live.github.io/posts/singleton-test/</link><pubDate>Tue, 18 Jun 2013 00:00:00 +0000</pubDate><guid>https://if1live.github.io/posts/singleton-test/</guid><description>이전에 사람들이 많이 사용하는 방식의 싱글턴을 까는 글을 쓰고 그것을 해결책을 정리했었다.(사실은 복붙에 더 가깝지만&amp;hellip;) 최근에 조금 더 생각해보니 그거보다 더 좋은 방법(특히 테스트측면에서)이 생각나서 똑같은 주제를 재탕하기로 했다.
테스트에서 싱글턴의 뭐가 문제인가? 전역변수 기반의 싱글턴이 사고치는 경우를 준비하자.
FileSystem이라는 싱글턴 클래스가 존재한다. 싱글턴으로 사용하는 전역변수의 이름은 gFileSystem이다. 그리고 gFileSystem을 기반으로 구현된 PackageManager라는 클래스가 있다. PackageManager에는 foo(), bar()라는 함수가 존재한다.
위의 상황에 대응하는 유닛테스트를 다음과 같이 작성했다.
class PackageManagerTest : public ::testing::Test { protected: virtual void SetUp() { gFileSystem.</description></item></channel></rss>