<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>logging on /usr/lib/libsora.so</title><link>https://if1live.github.io/tags/logging/</link><description>Recent content in logging on /usr/lib/libsora.so</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sat, 11 Jul 2020 00:00:00 +0900</lastBuildDate><atom:link href="https://if1live.github.io/tags/logging/index.xml" rel="self" type="application/rss+xml"/><item><title>express에서 콘솔로 찍은 로그를 HTTP 응답에 붙이기</title><link>https://if1live.github.io/posts/express-attach-console-log-to-response/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0900</pubDate><guid>https://if1live.github.io/posts/express-attach-console-log-to-response/</guid><description>HTTP 응답에 콘솔 로그 붙인 이유 간단한 express 서버가 있다고 치자.
const express = require('express'); const delay = require('delay'); const app = express(); app.get('/', async (req, res) =&amp;gt; { const data = await execute(req.query || {}); res.json(data); }); async function execute(input) { const id = input.id; console.info(`before delay: ${id}`); await delay(100); console.warn(`after delay: ${id}`); return { id }; } const port = 3000; app.listen(port, () =&amp;gt; console.log(`listen: 127.0.0.1:${port}`)); http://127.0.0.1:3000/?id=1로 접속하면 아래와 같은 JSON을 응답으로 받는다.</description></item></channel></rss>