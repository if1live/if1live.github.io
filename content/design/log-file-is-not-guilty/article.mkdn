---
title: 로그는 무죄
subtitle: 결제 로그를 남긴게 문제일까?
tags: [log file]
slug: log-file-is-not-guilty
author: if1live
date: 2019-01-06
url: /posts/log-file-is-not-guilty
---


## 개요

어제 트위터를 하다가 재밌는걸 발견했다.

> 트위터 캠페인: 디버그 뒤에는 깨끗이 정리하는 습관을 들입시다.
> https://twitter.com/Centrair_Hoya/status/1081119541092970498

![pic]({attach}log-file-is-not-guilty/tweet-1.jpg)

![pic]({attach}log-file-is-not-guilty/tweet-2.jpg)

![pic]({attach}log-file-is-not-guilty/tweet-3.jpg)


그럴싸하게 들렸지만 잘 생각해보니 뭔가 잘못된 표현이다.

나는 2013년에 KCP 결제 플러그인을 붙이는 작업을 했었다.
그때 기억으로 결제 로그를 남기는 기능 자체가 플러그인 연동 코드에 있었다.
하지만 그것으로 문제가 발생하지 않았다.
오히려 결제 로그가 없으면 현실의 문제를 대응하기 어렵다.
잘 생각해봤는데 로그 파일을 기록하는 것 자체는 문제가 아니다. 

그렇다면 진짜 문제는 무엇인가? 결과를 보고 하나씩 파악해보자


## 왜 검색이 되죠?

xpayclient initialize라고 검색했는데 검색 결과가 뜬게 잘못이다.
검색결과가 없었다면 어떤 사이트에 문제가 있는지 파악하는것부터 귀찮은 일이 된다.

원인은 뻔하다.
robots.txt를 생각없이 만든거다.
어디서 복사 붙여넣기 했을 것이다.
다음은 구글에서 검색당한 사이트의 robots.txt이다. 

```
User-agent: *
Allow: /
```


## 어떻게 검색 엔진이 로그 파일 위치를 알고있는거죠?

검색 엔진의 크롤러는 하이퍼 링크를 타고 들어간다. 
링크가 존재하지 않는 페이지는 크롤러가 확인할 방법이 없다. 
[https://libsora.so/foo/bar/spam/1](https://libsora.so/foo/bar/spam/1) 이라는 페이지가 실제로 있는지 없는지 크롤러가 무슨 수로 알아내는가?
가능한 모든 URL의 조합을 생성해서 크롤링하는 것은 불가능하다.
어딘가에 결제 로그 파일로 가는 링크가 있는것이다.

개발자가 미치지 않고는 결제 로그 파일의 링크를 사이트에 걸어두진 않을것이다.
그렇다면 원인은 뻔하다. directory listing이다. 웹서버 설정을 잘못 해둔거다

다음은 구글에서 검색당한 로그 파일의 상위폴더이다.
친절하게 로그 파일 링크가 보인다.

![pic]({attach}log-file-is-not-guilty/directory-listing.png)


## 왜 로그파일이 서빙되고 있는거죠?

위의 문제있는 URL을 보니 `/plugin/lgxpay/lgdacom/log/` 이다.
directory listing의 맨 밑을 보니 웹서버는 apache이다.
웹사이트를 만든 사람은 어떤 필요성에 의해 apache 에서 `/plugin` 경로를 외부에서 접근할수 있도록 설정했을 것이다.

외부에서 특정 폴더를 직접 접근 가능해야한다... 왠지 static file serving이 원인일거같다.

`/plugin` 디렉토리에 이미지, css, js가 들어있다.
이미지, css, js는 외부에서 접근 가능해야하니까 /plugin 디렉토리를 열었다가 하위에 있는 내용이 전부 서빙되어버린 것 아닐까? 

문제가 있는 사이트를 뒤져보니 `/plugin/jquery-ui/style.css` 파일이 있더라.
/plugin 디렉토리 만든후 플러그인, 라이브러리를 전부 때려박고 싶었나보다.


## 왜 경로가 다 똑같죠?

구글에서 검색당한 사이트의 URL을 읽어봤다. URL을 잘 보면 패턴이 똑같다.

전부 `/plugin/lgxpay/lgdacom/log/` 가 들어간다.
여러 사람이 만들었으면 디렉토리 이름 짓는 취향이 달라서 결과물이 달랐을거다.
나보고 플러그인 디렉토리 만들라고 했으면 `plugin` 이 아니라 `plugins` 라고 했을것이다.

많은 사이트가 똑같은 문제를 갖고있다... 이것은 프레임웍의 취약점으로 보인다.
어느 친절한 사이트 덕분에 어떤 프레임웍인지 알게되었다. 경로가 `www/gnu5/plugin/lgxpay/lgdacom/log/` 더라.
문제있는 사이트는 전부 그누보드5를 쓰고 있는것으로 보인다.

그누보드5에서 찾은 코드이다.

[https://github.com/gnuboard/gnuboard5/tree/master/plugin/lgxpay/lgdacom](https://github.com/gnuboard/gnuboard5/tree/master/plugin/lgxpay/lgdacom)

경로를 잘 보자. `plugin/lgxpay/lgdacom`.
결제 로그가 있던 경로랑 일치한다.


## 왜 로그파일이 그곳에 있죠?

웹서버에 접속하면 수십줄의 accesslog를 남긴다.
하지만 accesslog는 문제가 되지 않는다.
accesslog는 /var/log 밑에 저장될 것이다.
여기는 웹서버를 통해서는 접근할수 없는 경로이다.
만약 결제 로그 파일이 /var/log 밑에 accesslog처럼 기록되었다면 웹서버를 통해서는 접근할수 없으니 노출될 일도 없었을 것이다.

로그 파일이 `/plugin/lgxpay/lgdacom/log/` 밑에 기록되는 원인은 그누보드 코드를 뒤지면 찾을수 있을지 모른다.
PG 라이브러리를 초기화할때 로그 파일 쓰는 경로를 넘길텐데 이것이 잘못된 것으로 추정된다.

그누보드 5.3.2.3 기준

[https://github.com/gnuboard/gnuboard5/blob/5.3.2.3/plugin/lgxpay/lgdacom/XPayClient.php#L144-L146](https://github.com/gnuboard/gnuboard5/blob/5.3.2.3/plugin/lgxpay/lgdacom/XPayClient.php#L144-L146)

```
$this->config["log_dir"] = $home_dir."/log";

$this->log_file = $this->config["log_dir"] . "/log_" . date("Ymd") . ".log";
```

로그 파일명 규격을 보니 제대로 찾아온거같다. $home_dir이 어디에서 잘못 설정되었는지 찾아보자. $home_dir은 function XPayClient($home_dir, $mode="real") 로 넘어온다.

XPayClient 객체를 만드는곳은 한군데뿐이다. 

[https://github.com/gnuboard/gnuboard5/blob/5.3.2.3/plugin/lgxpay/AuthOnlyRes.php#L29-L42](https://github.com/gnuboard/gnuboard5/blob/5.3.2.3/plugin/lgxpay/AuthOnlyRes.php#L29-L42)

```
require_once(G5_LGXPAY_PATH.'/lgdacom/XPayClient.php');

// mall.conf 설정 추가를 위한 XPayClient 확장

class XPay extends XPayClient
{
    ...
}
a
$configPath = G5_LGXPAY_PATH.'/lgdacom'; //LG유플러스에서 제공한 환경파일("/conf/lgdacom.conf,/conf/mall.conf") 위치 지정.

$xpay = new XPay($configPath, $CST_PLATFORM);
```

XPayClient 상속 받아서 XPay를 만들어서 쓴다.
XPay에 들어가는 $home_dir은 `G5_LGXPAY_PATH.'/lgdacom'` 이다.
require_once 의 경로를 볼때 G5_LGXPAY_PATH의 값은 뻔하다.
이는 상수이고 모든 그누보드 프로젝트에서 똑같을 것이다.

그누보드5를 사용한 사이트에서 XPayClient 를 사용하면 로그는 `/plugin/lgxpay/lgdacom/log/` 에 기록된다.


## 진짜 그누보드5가 문제인가요?

그누보드에서 XPay라는 클래스는 AuthOnlyRes.php라는 파일에만 있었다.
게다가 결제 코드가 너무 작다.
내가 결제를 짜봐서 아는데 결제 코드가 저렇게 간단할리 없다.
코드를 잘 보면 본인 확인 처리 페이지라고 써있다.
요새는 회원 가입할때 휴대폰 인증하니까 그 목적으로 쓰이는 코드 같다.

그렇다면 그누보드5에서 결제 코드는 어디에 있는가? 몇년전에 봤던게 생각났다.

영카드이다.

영카트5 공식사이트에 가면 "그누보드5와 완벽하게 호환되는 LGPL 오픈소스 기반의 설치형 무료 쇼핑몰"이라고 설명되어있다. 영카드5 최신버전은 5.3.2.3이다.

그누보드5를 쓰면 실명인증의 로그가 구글 검색에 남는다.
이것도 치명적인 문제이긴하지만 지금 필요한것은 결제 로그니까 영카트5를 뜯어보자.


## 영카드5의 어디가 문제인가요?

그누보드5에서 XPayClient를 뜯어봤다.
이를 통해 결제 로그가 기록되는 경로를 알아낼수 있었다. (실제로는 본인 인증 로그지만)
본인 인증 로그나 결제 로그나 똑같은 파일에 쓰는걸 볼때 영카트5에서도 XPayClient 쓴다는 것을 알 수 있다.

소스를 뒤지면 이런게 나온다.

[https://github.com/gnuboard/youngcart5/blob/5.3.2.3/mobile/shop/settle_lg.inc.php](https://github.com/gnuboard/youngcart5/blob/5.3.2.3/mobile/shop/settle_lg.inc.php)

```
require_once(G5_LGXPAY_PATH.'/lgdacom/XPayClient.php');

class XPay extends XPayClient
{
    ...
}

…

/*
 * 1. 기본결제 인증요청 정보 변경
 *
 * 기본정보를 변경하여 주시기 바랍니다.(파라미터 전달시 POST를 사용하세요)
 */
...

$configPath = G5_LGXPAY_PATH.'/lgdacom';  //LG유플러스에서 제공한 환경파일("/conf/lgdacom.conf") 위치 지정.
```

그누보드5와 똑같은 문제가 있다. 로그 파일 경로가 똑같다.

[https://github.com/gnuboard/youngcart5/blob/5.3.2.3/mobile/shop/lg/xpay_approval.php#L52](https://github.com/gnuboard/youngcart5/blob/5.3.2.3/mobile/shop/lg/xpay_approval.php#L52)

결제 코드는 여기이다. 주석에  "1. 기본결제 인증요청 정보 변경" 나오는거 보니 결제 소스인게 확실하다


## 결론

결제 로그의 무죄를 입증하는게 시작이었다.
하지만 이미 사고는 터졌으니 누군가는 죄를 뒤집어써야 한다.
이를 위해 결제 로그가 구글로 노출되는 문제의 원인을 뒤져봤다.

다음의 요소가 합쳐지면 환장의 콜라보를 통해 결제 로그가 구글에서 검색된다.

*   영카드 5 사용
    *   결제 로그를 `<root>/plugin/lgxpay/lgdacom/log/` 에 기록한다.
    *   최신 영카트인 5 5.3.2.3에도 문제가 있다.
    *   LG U+ 전자결제 플러그인 자체에는 문제가 없다
    *   영카트가 PG 플러그인을 때려박을때 로그 파일 경로를 고정시켰다.
*   잘못 설정된 robots.txt
*   잘못 설정된 nginx/apache
    *   directory listing 활성화
    *   `/<root>[/plugin/lgxpay/lgdacom/log/` 를 static serving

**이거 존나 큰 보안 문제 아냐???**

나는 영카트 쓰는 사람들은 웹서버 설정같은거 잘 모를거라는 편견이 있다.
웹서버 설정파일을 고쳐서 문제를 해결하는 것도 가능하겠지만 현실적으로 어려울거같다.
영카트 경로를 통째로 서빙하는 설정파일 갖다놓고 쓰는게 보통일거같다.

그렇다면 취약점을 고칠 방법은 하나밖에 안보인다.
영카트가 결제 로그 저장하는 디렉토리를 영카트 밖으로 빼야한다.
영카트 디렉토리 안에 로그가 남는다면 유사한 문제가 다시 생길 수 있다.
